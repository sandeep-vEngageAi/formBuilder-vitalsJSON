{"version":3,"sources":["Components/UI/SearchDropdown/SearchDevExtreme.js","Components/UI/SearchDropdown/SearchableComponent.js","Icons/transparentVEngageLogo.png","Components/LayoutNavbar/LayoutNavbar.js","Icons/fileupload_1.jpg","store/actionTypes.js","store/actions.js","Components/LayoutSidebar/LayoutSidebarJsonDropdown/LayoutSidebarJsonDropdown.js","Components/UI/Card/Card.js","Components/UI/Modal/ModalTag.js","Components/LayoutSidebar/LayoutSidebarListOfJsons/LayoutSidebarJsonObject/LayoutSidebarJsonObject.js","Components/LayoutSidebar/LayoutSidebarListOfJsons/LayoutSidebarListOfJsons.js","Components/UI/JsonPrettier/JsonPrettier.js","Components/UI/TextBoxTag/TextBoxTag.js","Components/UI/PreviewComponent/PreviewPopup.js","Components/LayoutSidebar/LayoutSidebar.js","Components/UI/InputTag/InputTag.js","Components/UI/RadioButtonTag/RadioButtonTag.js","Components/LayoutBody/ExpectedResponses/ExpectedResponseItem/ExpectedResponseItem.js","Components/UI/ToastNotification/index.js","Components/LayoutBody/ExpectedResponses/ExpectedResponses.js","Components/LayoutBody/Actions/ActionItem/ActionItem.js","Components/LayoutBody/Actions/Actions.js","Components/UI/CheckBox/CheckBox.js","Components/LayoutBody/BotUtterance/BotUtteranceItem/BotUtteranceItem.js","Components/LayoutBody/BotUtterance/BotUtterances.js","Components/LayoutBody/LayoutBody.js","Components/Layout/Layout.js","HighOrderFunctions/FetchFunction/getFetchFunction.js","HighOrderFunctions/API/APIData.js","App.js","HighOrderFunctions/API/allGetAPI.js","reportWebVitals.js","store/Reducer.js","store/Store.js","index.js"],"names":["App","applyFilterTypes","key","name","state","editBoxValue","editBoxValueChanged","component","props","updatedSelectedValue","option","setState","showFilterRow","showHeaderFilter","currentFilter","style","display","width","this","className","id","required","placeholder","dataSource","optionsFetched","displayExpr","displayName","valueExpr","searchEnabled","onValueChanged","defaultValue","value","React","Component","SearchableComponent","disabled","SearchDevExtreme","data","displayValue","updatedValue","setValue","helperText","LayoutHeader","src","vEngageLogo","height","objectFit","NOTIFICATION_WITH_MESSAGE","VITALS_DATA","FILE_DETAILS","RESET_DETAILS","HAS_FILE_UPDATED","SOME_FORMS_EMPTY","showNotificationWithMessage","status","type","notification","setVitalsData","vitalsData","setFileDetails","fileDetails","hasFileUpdated","checkIfSomeFormsEmpty","LayoutSidebarJsonDropdown","dispatch","useDispatch","getFileContent","file","a","text","contents","jsonContent","JSON","parse","variant","message","err","length","getFileAccess","window","showOpenFilePicker","fileHandle","setFileHandler","getFile","onDrop","e","preventDefault","stopPropagation","dataTransfer","items","kind","getAsFileSystemHandle","entry","onClick","onDragOver","onDragEnter","document","getElementById","border","onDragLeave","fileUploadIcon","ActionAreaCard","IsFormEmpty","useSelector","reducer","someFormsEmpty","Card","sx","maxWidth","index","currentSelectedJsonIndex","Object","keys","item","CardActionArea","CardContent","Typography","gutterBottom","question_id","color","fallback","position","top","left","transform","bgcolor","borderRadius","boxShadow","TransitionsModal","Modal","open","showModal","onClose","setShowModal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","modalHeader","modalMessage","Button","startIcon","deleteData","backgroundColor","LayoutSidebarJsonObject","useState","showSelectedModal","setShowSelectedModal","fileUpdated","description","selectCurrentJsonFunc","IconButton","deleteJsonObject","LayoutSidebarListOfJsons","jsonRef","useRef","listOfJsons","setListOfJsons","useEffect","templateData","renderedList","Array","isArray","map","uuidv4","ref","JsonPrettier","setData","stringiFiedResponse","jsonData","stringify","undefined","scrollByContent","scrollByThumb","theme","JSONPrettyMon","onChange","MultilineTextFields","TextField","fullWidth","multiline","event","target","PreviewPopup","currentJson","popupVisible","positionOf","previewState","setPreviewState","prev","visibility","hidePopup","setVisibility","closeButtonOptions","visible","onHiding","dragEnabled","closeOnOutsideClick","showCloseButton","showTitle","title","container","at","my","widget","toolbar","options","LayoutSidebar","setTemplateData","fileHandler","addNewFormClicked","setAddNewFormClicked","functionToCheckEmptyJsons","fileData","tempCheckSomeFormsEmpty","some","console","log","addNewJsonToTemplate","areSomeFormsEmpty","addNewJsonObject","saveDataToLocalFolder","createWritable","writable","write","close","getNewFileHandle","suggestedName","types","accept","showSaveFilePicker","handle","createNewFile","saveFormAs","newFileHandle","padding","marginBottom","ComposedTextField","FormControl","OutlinedInput","label","FormHelperText","RowRadioButtonsGroup","radioValue","setRadioValue","RadioGroup","row","FormControlLabel","control","Radio","ExpectedResponseItem","answer_type","match_type","deleteResponse","ToastNotification","indexOf","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","setTimeout","notify","newestOnTop","rtl","pauseOnFocusLoss","ExpectedResponses","expectedResponseList","setExpectedResponseList","newExpectedResponse","setNewExpectedResponse","updateNewExpectedResponse","indentifier","tempExpectedResponseList","splice","tempNewExpectedResponse","push","ActionItem","buttonInEditMode","setButtonInEditMode","botUtterance","setBotUtterance","updateAction","deleteAction","Actions","actionList","setActionList","newAction","setNewAction","tempActionList","ControlledCheckbox","checked","setChecked","Checkbox","inputProps","valueToBeChecked","BotUtteranceItem","updateBotUtterance","deleteUtterance","BotUtterances","botUtteranceList","setBotUtteranceList","newBotUtterance","setNewBotUtterance","tempBotUtteranceList","deleteBotUtterance","LayoutBody","selectedFileDetails","jsonForm","setJsonForm","modifiedJson","setModifiedJson","jsonObject","tempMasterJson","masterJson","createForm","updatejsonObjectFields","identifier","entityName","createModifiedJson","tempJsonForm","finalJsonForm","typeOptionsData","symptomData","clinicalEntitiesData","measureTypeOptionsData","updateJsonTemplateData","Layout","vitalsJsonTemplate","setCurrentSelectedJsonIndex","setCurrentJson","LayoutNavbar","jsonIndexInTemplate","tempTemplateData","useFetch","urlEndpoint","fetchAgain","response","setResponse","error","setError","isLoading","setIsLoading","fetchData","myHeaders","Headers","append","requestOptions","method","fetch","BACKEND_SERVICE_URL","then","alert","localStorage","removeItem","json","result","typeOptions","measureTypeOptions","measure_type","showLayout","setShowLayout","notificationState","showOnlineMessage","navigator","onLine","backgroundIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Reducer","action","composeEnhancers","compose","rootReducer","combineReducers","persistedState","serializedState","getItem","loadFromLocalStorage","store","createStore","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.75d9e84d.chunk.js","sourcesContent":["import React from \"react\";\nimport { SelectBox } from \"devextreme-react/select-box\";\n\n// import { products } from \"./data.js\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.applyFilterTypes = [\n      {\n        key: \"auto\",\n        name: \"Immediately\",\n      },\n      {\n        key: \"onClick\",\n        name: \"On Button Click\",\n      },\n    ];\n    this.state = {\n      editBoxValue: [],\n    };\n    this.editBoxValueChanged = ({ component }) => {\n       \n      this.props.updatedSelectedValue(component.option(\"selectedItem\"));\n      this.setState({ editBoxValue: component.option(\"selectedItem\") });\n\n    };\n    this.state = {\n      showFilterRow: true,\n      showHeaderFilter: true,\n      currentFilter: this.applyFilterTypes[0].key,\n    };\n  }\n  \n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          width:`${this.props.width}`\n        }}\n      >\n        <div className=\"widget-container\">\n          <div className=\"dx-field\">\n            <SelectBox\n              id=\"selectionBoxID\"\n              className=\"searchDropdown__container\"\n              required\n              placeholder={this.props.placeholder}\n              dataSource={this.props.optionsFetched}\n              displayExpr={this.props.displayName}\n              valueExpr={this.props.valueExpr}\n              searchEnabled={true}\n              onValueChanged={this.editBoxValueChanged}\n              defaultValue={this.props.defaultValue}\n              width={this.props.width}\n              value={this.props.defaultValue}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\nimport SearchDevExtreme from \"./SearchDevExtreme\";\nfunction SearchableComponent(props) {\n  const updateValueFunc = (updatedValue) => {\n    props.setValue(updatedValue, props.name);\n  };\n  \n  return (\n    <div\n      className=\"devextremeDropdown__container\"\n      style={{ width: props.width }}\n      disabled={props.disabled}\n    >\n      <div className=\"devextremeDropdown__text default-font\">\n        {props.displayName}\n      </div>\n      <SearchDevExtreme\n        width={props.width}\n\n        placeholder={`${props.placeholder}`}\n        optionsFetched={props.data}\n        displayName={`${props.displayValue}`}\n        displayExpr={`${props.displayValue}`}\n        valueExpr={`${props.displayValue}`}\n        defaultValue={props.value}\n        updatedSelectedValue={updateValueFunc}\n      />\n      <div className=\"devextremeDropdown__text\">{props.helperText}</div>\n    </div>\n  );\n}\n\nexport default SearchableComponent;\n\n","export default __webpack_public_path__ + \"static/media/transparentVEngageLogo.b05c8fc3.png\";","import React from 'react'\nimport SearchableComponent from '../UI/SearchDropdown/SearchableComponent';\nimport vEngageLogo from '../../Icons/transparentVEngageLogo.png';\nconst LayoutHeader = () => {\n    return (\n        <div className=\"layoutHeader__container\">\n            <img className=\"layoutHeader__image\" src={vEngageLogo} style={{height:\"50px\",objectFit:\"contain\"}} />\n        </div>\n    )\n}\n\nexport default LayoutHeader\n","export default __webpack_public_path__ + \"static/media/fileupload_1.14c85acc.jpg\";","export const NOTIFICATION_WITH_MESSAGE = \"NOTIFICATION_WITH_MESSAGE\";\nexport const VITALS_DATA =\"VITALS_DATA\";\nexport const FILE_DETAILS =\"FILE_DETAILS\";\nexport const RESET_DETAILS =\"RESET_DETAILS\";\nexport const HAS_FILE_UPDATED = \"HAS_FILE_UPDATED\";\nexport const SOME_FORMS_EMPTY =\"SOME_FORMS_EMPTY\";","import {\n  NOTIFICATION_WITH_MESSAGE,\n  VITALS_DATA,\n  FILE_DETAILS,\n  RESET_DETAILS,\n  HAS_FILE_UPDATED,\n  SOME_FORMS_EMPTY\n} from \"./actionTypes\";\n\nexport const showNotificationWithMessage = (status) => {\n  return {\n    type: NOTIFICATION_WITH_MESSAGE,\n    notification: status,\n  };\n};\n\nexport const setVitalsData = (data) => {\n  return {\n    type: VITALS_DATA,\n    vitalsData: data,\n  };\n};\n\nexport const setFileDetails = (fileDetails) => {\n  return {\n    type: FILE_DETAILS,\n    fileDetails: fileDetails,\n  };\n};\n\nexport const resetDetails = () => {\n  return {\n    type: RESET_DETAILS,\n  };\n};\n\nexport const hasFileUpdated = (status) => {\n  return {\n    type: HAS_FILE_UPDATED,\n    status: status,\n  };\n};\n\nexport const checkIfSomeFormsEmpty = (status)=>{\n  return{\n    type:SOME_FORMS_EMPTY,\n    status:status,\n  }\n}\n","import React from \"react\";\nimport \"./LayoutSidebarJsonDropdown.scss\";\nimport fileUploadIcon from \"../../../Icons/fileupload_1.jpg\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  showNotificationWithMessage,\n  setVitalsData,\n  setFileDetails,\n  checkIfSomeFormsEmpty,\n} from \"../../../store/actions\";\nconst LayoutSidebarJsonDropdown = (props) => {\n  const dispatch = useDispatch();\n\n  const getFileContent = async (file) => {\n    dispatch(checkIfSomeFormsEmpty(false));\n\n    const contents = await file.text();\n\n    try {\n      let jsonContent = JSON.parse(contents);\n      dispatch(setFileDetails(file));\n      dispatch(setVitalsData(jsonContent));\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"JSON File Chosen\",\n        })\n      );\n    } catch (err) {\n      if (contents.length == 0) {\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"success\",\n            message: \"Empty JSON File Chosen\",\n          })\n        );\n        dispatch(setFileDetails(file));\n        dispatch(setVitalsData([]));\n      } else {\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"warning\",\n            message: \"Please choose Array of JSON\",\n          })\n        );\n      }\n    }\n  };\n\n  // getFileContent is a function defined above\n  // call this function when picking file on clicking\n  const getFileAccess = async (getFileContent) => {\n    // fileHandle\n    try {\n      const [fileHandle] = await window.showOpenFilePicker();\n      props.setFileHandler(fileHandle);\n      const file = await fileHandle.getFile();\n      await getFileContent(file);\n    } catch (err) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"info\",\n          message: \"File Selection Aborted!!\",\n        })\n      );\n    }\n  };\n\n  // getting file on droping item\n  const onDrop = async (e, getFileContent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    try {\n      // Process all of the items.\n      for (const item of e.dataTransfer.items) {\n        // kind will be 'file' for file/directory entries.\n        if (item.kind === \"file\") {\n          // const entry = await item.getAsFileSystemHandle();\n          const entry = await e.dataTransfer.items[0].getAsFileSystemHandle();\n          if (entry.kind === \"file\") {\n            const file = await entry.getFile();\n            props.setFileHandler(entry);\n            // run code for if entry is a file\n            await getFileContent(file);\n          } else if (entry.kind === \"directory\") {\n            // run code for is entry is a directory\n          }\n        }\n      }\n    } catch (err) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"info\",\n          message: \"File Selection Aborted!!\",\n        })\n      );\n    }\n  };\n  const activateDropZoneContainer = () => {\n    let dropzoneDiv = document.getElementById(\"jsonFile-dropzone\");\n    dropzoneDiv.style.border = \"1px dotted grey\";\n  };\n  const deActivateDropZoneContainer = () => {\n    let dropzoneDiv = document.getElementById(\"jsonFile-dropzone\");\n    dropzoneDiv.style.border = \"\";\n  };\n  return (\n    <div className=\"layoutSidebarJsonDropdown__container\">\n      <div className=\"layoutSidebarJsonDropdown__text\">\n        Select or Drop JSON File Here 🙂\n      </div>\n      <div\n        id=\"jsonFile-dropzone\"\n        className=\"layoutSidebarJsonDropdown__fileDropContainer\"\n        onClick={(e) => getFileAccess(getFileContent)}\n        onDragOver={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        onDrop={(e) => onDrop(e, getFileContent)}\n        onDragEnter={activateDropZoneContainer}\n        onDragLeave={deActivateDropZoneContainer}\n      >\n        <img src={fileUploadIcon} className=\"layoutSidebarJson__image\" />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutSidebarJsonDropdown;\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport './Card.scss';\nimport { useSelector } from \"react-redux\";\nexport default function ActionAreaCard(props) {\n  const IsFormEmpty = useSelector(state=>state.reducer.someFormsEmpty)\n  return (\n    <Card sx={{ maxWidth: 350 }} onClick={props.onClick}  className={`${(props.index==props.currentSelectedJsonIndex) && \"active__card\"}\n    ${((Object.keys(props.item).length == 0) && IsFormEmpty ) && \"empty__form\"}\n    `}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom={false} variant=\"h8\" component=\"div\">\n            {props.index+1}\n           {props.item?.question_id &&<div className=\"\">question id:  {props.item.question_id}</div> }\n          </Typography>\n          <Typography variant=\"subtitle\" color=\"text.secondary\">\n           {props.item?.fallback &&<div className=\"\">fallback:  {props.item.fallback}</div> }\n           {props.item?.type &&<div className=\"\">type:{props.item.type}</div> }\n          \n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Button from \"@mui/material/Button\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport \"./ModalTag.scss\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 300,\n  height: 200,\n  bgcolor: \"background.paper\",\n  borderRadius: \"8px\",\n  boxShadow:\n    \"rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px\",\n};\n\nexport default function TransitionsModal(props) {\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={props.showModal}\n        onClose={() => props.setShowModal(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.showModal}>\n          <Box sx={style}>\n         \n            <div className=\"modal__container\">\n              <div className=\"modal__header\">{props.modalHeader ? props.modalHeader: \"Data Deletion\"}</div>\n              <div className=\"modal__body\">\n                {props.modalMessage\n                  ? props.modalMessage\n                  : \"Are you sure you want to delete?\"}\n              </div>\n              <div className=\"modal__footer\">\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  startIcon={<Brightness4Icon />}\n                  onClick={() => props.deleteData(false)}\n                >\n                  No\n                </Button>{\" \"}\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<DeleteForeverIcon />}\n                  onClick={() => props.deleteData(true)}\n                  style={{ backgroundColor: \"#f50057\" }}\n                >\n                  Yes\n                </Button>\n              </div>\n            </div>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React,{useState,useEffect} from \"react\";\nimport \"./LayoutSidebarJsonObject.scss\";\nimport Card from \"../../../UI/Card/Card\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ModalTag from '../../../UI/Modal/ModalTag';\nimport { useDispatch ,useSelector} from \"react-redux\";\nimport { hasFileUpdated, showNotificationWithMessage } from \"../../../../store/actions\";\nconst LayoutSidebarJsonObject = (props) => {\n  const dispatch =useDispatch();\n  const [showModal,setShowModal] = useState(false);\n  const [showSelectedModal,setShowSelectedModal] = useState(false);\n  const fileUpdated = useSelector(state=>state.reducer.fileUpdated)\n \n  const deleteData =(status)=>{\n\n\n    if(status==true){\n      props.deleteJsonObject(props.index);\n      setShowModal(false);\n      dispatch(showNotificationWithMessage({\n        variant:\"success\",\n        message:\"JSON object deletion Successful!\"\n      }))\n    }else if(status ==false){\n      setShowModal(false);\n      dispatch(showNotificationWithMessage({\n        variant:\"info\",\n        message:\"JSON object deletion declined!\"\n      }))\n    }\n  }\n  const updateSelectedCardIndex = (status) =>{\n    if(status==true){\n      props.selectCurrentJsonFunc(props.index)\n      setShowSelectedModal(false);\n      dispatch(showNotificationWithMessage({\n        variant:\"success\",\n        message:\"JSON Selected!\"\n      }))\n      dispatch(hasFileUpdated(false));\n    }else if(status ==false){\n      setShowSelectedModal(false);\n      dispatch(showNotificationWithMessage({\n        variant:\"info\",\n        message:\"JSON navigation Declined!\"\n      }))\n    }\n  }\n  const shouldAllClickingToJSON = () =>{\n    if(fileUpdated){\n      setShowSelectedModal(true)\n    }else{\n      props.selectCurrentJsonFunc(props.index)\n      \n    }\n  }\n  return (\n    <div className=\"layoutSidebarJsonObject__container\">\n      <div className=\"layoutSidebarJsonObject__card\">\n        <Card item={props.item} description=\"card represents each object\" onClick ={shouldAllClickingToJSON} index={props.index} currentSelectedJsonIndex ={props.currentSelectedJsonIndex}/>\n      </div>\n      <div className=\"layoutSidebarJsonObject__icons\">\n        {/* <IconButton  >\n          <EditIcon />\n        </IconButton> */}\n        <IconButton onClick={()=>setShowModal(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </div>\n      <ModalTag \n      showModal={showModal}\n      setShowModal={setShowModal}\n      deleteData ={deleteData}\n\n      />\n      <ModalTag \n      showModal={showSelectedModal}\n      setShowModal={setShowSelectedModal}\n      deleteData ={updateSelectedCardIndex}\n      modalMessage=\"Are you sure you want to navigate without saving data?\"\n      modalHeader=\"Chose another Form\"\n      />\n    </div>\n  );\n};\n\nexport default LayoutSidebarJsonObject;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport LayoutSidebarJsonDropdown from \"../LayoutSidebarJsonDropdown/LayoutSidebarJsonDropdown\";\nimport LayoutSidebarJsonObject from \"./LayoutSidebarJsonObject/LayoutSidebarJsonObject\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./LayoutSidebarListOfJsons.scss\";\nconst LayoutSidebarListOfJsons = (props) => {\n  const jsonRef = useRef();\n  const [listOfJsons, setListOfJsons] = useState([]);\n  \n  useEffect(() => {\n    setListOfJsons(props.templateData);\n    return () => {\n      setListOfJsons([]);\n    };\n  }, [props.templateData]);\n  let renderedList = null;\n  renderedList =\n    Array.isArray(listOfJsons) &&\n    listOfJsons.length > 0 &&\n    listOfJsons.map((item, index) => {\n      return (\n        <LayoutSidebarJsonObject\n          item={item}\n          key={uuidv4()}\n          index={index}\n          selectCurrentJsonFunc={props.selectCurrentJsonFunc}\n          currentSelectedJsonIndex={props.currentSelectedJsonIndex}\n          deleteJsonObject={props.deleteJsonObject}\n        />\n      );\n    });\n\n  return (\n    <div className=\"layoutSidebarListOfJsons__container\">\n      <div>{renderedList}</div>\n      <div ref={jsonRef} />\n    </div>\n  );\n};\n\nexport default LayoutSidebarListOfJsons;\n","import React ,{useState,useEffect} from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport JSONPrettyMon from \"react-json-pretty/dist/monikai\";\nimport \"./JsonPrettier.scss\";\nimport ScrollView from \"devextreme-react/scroll-view\";\nconst JsonPrettier = (props) => {\n  const [data,setData] = useState([]);\n  useEffect(()=>{\n    let stringiFiedResponse = [];\n    let jsonData = props.jsonData;\n    if (typeof jsonData != \"string\") {\n      stringiFiedResponse = JSON.stringify(jsonData, undefined, 2);\n    } else {\n      stringiFiedResponse = JSON.stringify(jsonData, undefined, 4);\n    }\n    setData(stringiFiedResponse)\n  },[])\n  const changedValue=(value)=>{\n  }\n  return (\n    <ScrollView scrollByContent={true} scrollByThumb={true} style={{height:\"100%\"}} >\n      <div className=\"text-content\"  >\n          \n        <JSONPretty\n          data={props.jsonData}\n          theme={JSONPrettyMon}\n          onChange={(value)=>changedValue(value)}\n        ></JSONPretty>\n      </div>\n    </ScrollView>\n  );\n};\n\nexport default JsonPrettier;\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nexport default function MultilineTextFields(props) {\n\n  const handleChange = (event) => {\n    props.setValue(event.target.value);\n  };\n\n  return (\n    <div style={{width:props.width}}>\n      <div className=\"inputTag__container default-font\">{props.name}</div>\n\n      <TextField\n      fullWidth={true}\n\n        id=\"outlined-multiline-static\"\n        // label=\"Action\"\n        multiline\n        // max-rows={3}\n        value={props.value}\n        onChange={handleChange}\n        disabled={props.disabled==true ? true: false}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Popup, Position, ToolbarItem } from \"devextreme-react/popup\";\nimport JsonPrettier from \"../JsonPrettier/JsonPrettier\";\nimport TextBox from \"devextreme/ui/text_box\";\nimport TextBoxTag from \"../../UI/TextBoxTag/TextBoxTag\";\nconst PreviewPopup = (props) => {\n  const [showEditMode, setShowEditMode] = useState(false);\n  const [previewState, setPreviewState] = useState({\n    currentJson: {},\n    popupVisible: false,\n    positionOf: \"\",\n  });\n  useEffect(() => {\n    setPreviewState((prev) => {\n      return {\n        ...prev,\n        currentJson: props.value && props.value,\n        popupVisible: props.visibility && props.visibility,\n      };\n    });\n    return () => {};\n  }, [props.visibility]);\n  const showPopup = () => {\n    setPreviewState((prev) => {\n      return {\n        ...prev,\n        currentJson: props.value,\n        popupVisible: true,\n      };\n    });\n  };\n  useEffect(() => {\n    if (props.visibility == true) {\n      showPopup();\n    }\n  }, [props.visibility]);\n  const hidePopup = () => {\n    props.setVisibility(false);\n    setPreviewState((prev) => {\n      return {\n        ...prev,\n        currentJson: {},\n        popupVisible: false,\n      };\n    });\n  };\n\n  const openEditMode = () => {\n    setShowEditMode(true);\n  };\n  const closeButtonOptions = {\n    text: \"Close\",\n    onClick: hidePopup,\n  };\n  const editButtonOptions = {\n    text: \"Edit\",\n    onClick: openEditMode,\n  };\n  const modifyJsonData = (jsonData) => {\n    let stringiFiedResponse = [];\n\n    if (typeof jsonData != \"string\") {\n      stringiFiedResponse = JSON.stringify(jsonData, undefined, 2);\n    } else {\n      stringiFiedResponse = JSON.stringify(jsonData, undefined, 4);\n    }\n    return stringiFiedResponse;\n  };\n  return (\n    <Popup\n      visible={previewState.popupVisible}\n      onHiding={hidePopup}\n      dragEnabled={true}\n      closeOnOutsideClick={true}\n      showCloseButton={true}\n      showTitle={true}\n      title=\"Information\"\n      container=\".dx-viewport\"\n      width={\"90%\"}\n      height={\"90%\"}\n    >\n      <Position at=\"center\" my=\"center\" />\n\n      <ToolbarItem\n        widget=\"dxButton\"\n        toolbar=\"bottom\"\n        options={closeButtonOptions}\n      />\n      {/* <ToolbarItem\n        widget=\"dxButton\"\n        toolbar=\"bottom\"\n        options={editButtonOptions}\n      /> */}\n      {/* <pre>{props.jsonData}</pre> */}\n        <JsonPrettier jsonData={props.jsonData} />\n     \n    </Popup>\n  );\n};\n\nexport default PreviewPopup;\n","import React, { useEffect, useState } from \"react\";\nimport \"./LayoutSidebar.scss\";\nimport LayoutSidebarJsonDropdown from \"./LayoutSidebarJsonDropdown/LayoutSidebarJsonDropdown\";\nimport LayoutSidebarListOfJsons from \"./LayoutSidebarListOfJsons/LayoutSidebarListOfJsons\";\nimport Button from \"@mui/material/Button\";\nimport VisibilitySharpIcon from \"@mui/icons-material/VisibilitySharp\";\nimport AddBoxSharpIcon from \"@mui/icons-material/AddBoxSharp\";\nimport SaveSharpIcon from \"@mui/icons-material/SaveSharp\";\nimport PreviewPopup from \"../UI/PreviewComponent/PreviewPopup\";\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  showNotificationWithMessage,\n  setFileDetails,\n  setVitalsData,\n  checkIfSomeFormsEmpty,\n} from \"../../store/actions\";\nconst LayoutSidebar = (props) => {\n  const fileDetails = useSelector((state) => state.reducer.fileDetails);\n  const dispatch = useDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const [templateData, setTemplateData] = useState([]);\n  const [fileHandler, setFileHandler] = useState(\"\");\n  const [addNewFormClicked, setAddNewFormClicked] = useState(false);\n\n // function to Check if any form in file is empty\n const functionToCheckEmptyJsons = (fileData) => {\n  try {\n    if (Array.isArray(fileData)) {\n      let tempSomeFormEmpty = fileData.map(\n        (item) => Object.keys(item).length == 0\n      );\n      let tempCheckSomeFormsEmpty = tempSomeFormEmpty.some(\n        (item) => item == true\n      );\n      if (tempCheckSomeFormsEmpty) {\n        dispatch(checkIfSomeFormsEmpty(tempCheckSomeFormsEmpty));\n        return true;\n      } else {\n        return false;\n      }\n    }\n  } catch (err) {\n    console.log(\n      \"Error occured in checking if some forms empty or not in LayoutSidebar Component\"\n    );\n  }\n};\n\n// function for adding new form \n  const addNewJsonToTemplate = async() => {\n    let areSomeFormsEmpty = functionToCheckEmptyJsons(props.templateData);\n    if (areSomeFormsEmpty == false) {\n      dispatch(checkIfSomeFormsEmpty(areSomeFormsEmpty));\n    }\n    props.addNewJsonObject();\n    setAddNewFormClicked(true);\n    dispatch(\n      showNotificationWithMessage({\n        variant: \"success\",\n        message: \"New Empty Form added! 🔽\",\n      })\n    );\n  };\n\n \n\n  const saveDataToLocalFolder = async (fileHandler) => {\n    try {\n      let areSomeFormsEmpty = functionToCheckEmptyJsons(props.templateData);\n      if (areSomeFormsEmpty === false) {\n        try {\n          const writable = await fileHandler?.createWritable();\n          // Write the contents of the file to the stream.\n          await writable.write(JSON.stringify(props.templateData));\n          // Close the file and write the contents to disk.\n          await writable.close();\n          dispatch(\n            showNotificationWithMessage({\n              variant: \"success\",\n              message: \"File updated in Local Directory\",\n            })\n          );\n        } catch (err) {\n          dispatch(\n            showNotificationWithMessage({\n              variant: \"error\",\n              message: \"File Saving Aborted\",\n            })\n          );\n        }\n      } else {\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"error\",\n            message: \"Please Either delete or update Empty Forms\",\n          })\n        );\n      }\n    } catch (err) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"error\",\n          message: \"Error in saving File\",\n        })\n      );\n    }\n  };\n\n  // get New File Handle Function\n  async function getNewFileHandle() {\n    const options = {\n      suggestedName: \"Untitled Text.json\",\n      types: [\n        {\n          description: \"JSON Files\",\n          accept: {\n            \"text/plain\": [\".json\"],\n          },\n        },\n      ],\n    };\n    const handle = await window?.showSaveFilePicker(options);\n    return handle;\n  }\n  const createNewFile = async () => {\n    dispatch(checkIfSomeFormsEmpty(false));\n    const fileHandle = await getNewFileHandle();\n    // setting fileHandle to local state fileHandler defined above\n    setFileHandler(fileHandle);\n\n    const file = await fileHandle.getFile();\n    dispatch(setFileDetails(file));\n\n    // contents of  newly created file\n    const contents = await file.text();\n    try {\n      let jsonContent = JSON.parse(contents);\n      dispatch(setVitalsData(jsonContent));\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"JSON File Chosen\",\n        })\n      );\n    } catch (err) {\n      if (contents.length == 0) {\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"success\",\n            message: \"JSON File Chosen\",\n          })\n        );\n        dispatch(setVitalsData([]));\n      } else {\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"warning\",\n            message: \"Please choose Empty Array of JSON\",\n          })\n        );\n      }\n    }\n  };\n\n  // function for file save as:\n  const saveFormAs = async () => {\n    try {\n      let areSomeFormsEmpty = checkIfSomeFormsEmpty(props.templateData);\n      if (areSomeFormsEmpty == false) {\n        const newFileHandle = await getNewFileHandle();\n        saveDataToLocalFolder(newFileHandle);\n      } else {\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"error\",\n            message: \"Please Either delete or update Empty Forms\",\n          })\n        );\n      }\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    if (props.templateData) {\n      setTemplateData(props.templateData);\n    }\n  }, [props.templateData]);\n  return (\n    <div className=\"layoutSidebar__container\">\n      <div className=\"layoutSidebar__jsonDropdown\">\n        <LayoutSidebarJsonDropdown setFileHandler={setFileHandler} />\n      </div>\n      <div className=\"layoutSidebar__jsonObjects\">\n        <LayoutSidebarListOfJsons\n          templateData={templateData}\n          selectCurrentJsonFunc={props.selectCurrentJsonFunc}\n          currentSelectedJsonIndex={props.currentSelectedJsonIndex}\n          deleteJsonObject={props.deleteJsonObject}\n          addNewFormClicked={addNewFormClicked}\n          setAddNewFormClicked={setAddNewFormClicked}\n        />\n      </div>\n      <div className=\"layoutSidebar__buttons\">\n        <div className=\"layoutSidebar__createNewFileButton\">\n          <Button\n            variant=\"contained\"\n            startIcon={<AddBoxSharpIcon />}\n            style={{\n              // backgroundColor: \"#f50057\",\n              backgroundColor: \"#95D03A\",\n              border: \"1px solid grey\",\n              padding: \"10px\",\n              marginBottom: \"5px\",\n              width: \"100%\",\n            }}\n            onClick={() => createNewFile()}\n          >\n            Create New File\n          </Button>\n        </div>\n        {fileDetails.name && (\n          <Button\n            variant=\"contained\"\n            startIcon={<AddBoxSharpIcon />}\n            onClick={addNewJsonToTemplate}\n          >\n            Add New Form\n          </Button>\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<VisibilitySharpIcon />}\n          onClick={() => setVisibility(true)}\n        >\n          Complete Form Preview\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          startIcon={<SaveSharpIcon />}\n          onClick={() => saveDataToLocalFolder(fileHandler)}\n        >\n          Save to Existing File\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          startIcon={<FileDownloadIcon />}\n          onClick={saveFormAs}\n          style={{\n            backgroundColor: \"#f50057\",\n          }}\n        >\n          Save File content with New Name\n        </Button>\n      </div>\n      <PreviewPopup\n        visibility={visibility}\n        setVisibility={setVisibility}\n        jsonData={props.templateData}\n      />\n    </div>\n  );\n};\n\nexport default LayoutSidebar;\n","import * as React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { Input } from \"@mui/material\";\n\nexport default function ComposedTextField(props) {\n\n  const handleChange = (event) => {\n    props.setValue(event.target.value,props.name);\n  };\n\n  return (\n    <FormControl style={{ width:props.width }}>\n      <div className=\"inputTag__container default-font\">{props.displayName}</div>\n\n      <OutlinedInput\n       style={{height:\"36px\",width:props.width}}\n        id=\"component-outlined\"\n        value={props.value}\n        onChange={handleChange}\n        label=\"Name\"\n        disabled={props.disabled ? true : false}\n      />\n      <FormHelperText id=\"component-helper-text\">\n          {props.helperText}\n      </FormHelperText>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\n\nexport default function RowRadioButtonsGroup(props) {\n  const [radioValue, setRadioValue] = React.useState(\"\");\n  useEffect(() => {\n    setRadioValue(props.value);\n  }, [props.value]);\n\n  return (\n    <FormControl component=\"fieldset\">\n      <div component=\"legend\" className=\"default-font\">\n        {props.displayName}\n      </div>\n      <RadioGroup\n        row\n        aria-label=\"gender\"\n        // displayName=\"row-radio-buttons-group\"\n        value={radioValue}\n        onChange={event=>props.setValue(event.target.value,props.name)}\n      >\n        <FormControlLabel value=\"true\" control={<Radio />} label=\"True\" />\n        <FormControlLabel value=\"false\" control={<Radio />} label=\"False\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React,{useState} from \"react\";\nimport \"./ExpectedResponseItem.scss\";\nimport InputTag from \"../../../UI/InputTag/InputTag\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../../store/actions\";\nimport TransitionsModal from \"../../../UI/Modal/ModalTag\";\nconst ExpectedResponseItem = (props) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const deleteData = (status) => {\n    if (status == true) {\n      props.deleteResponse(props.index);\n      setShowModal(false);\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"JSON object deletion Successful!\",\n        })\n      );\n    } else if (status == false) {\n      setShowModal(false);\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"info\",\n          message: \"JSON object deletion declined!\",\n        })\n      );\n    }\n  };\n  return (\n    <div className=\"expectedResponseItem__container\">\n      <div className=\"expectedResponseItem__inputTags\">\n        <InputTag disabled width=\"90%\" value={props.item.answer_type} />\n        <InputTag disabled width=\"90%\" value={props.item.match_type} />\n        <InputTag disabled width=\"90%\" value={props.item.value} />\n      </div>\n      <div className=\"expectedResponseItem__actions\">\n        {/* <IconButton>\n             <EditIcon />\n         </IconButton> */}\n        <IconButton onClick={()=>setShowModal(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </div>\n      <TransitionsModal \n      showModal={showModal}\n      setShowModal={setShowModal}\n      deleteData ={deleteData}\n      />\n    </div>\n  );\n};\n\nexport default ExpectedResponseItem;\n","import React, { useEffect, useState } from \"react\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../store/actions\";\nexport default function ToastNotification(props) {\n  const dispatch = useDispatch();\n  const [status, setStatus] = useState([\n    \"info\",\n    \"success\",\n    \"error\",\n    \"warning\",\n    \"default\",\n  ]);\n  const notify = () => {\n    let variant = props.notification.variant\n      ? props.notification.variant\n      : \"success\";\n    if (status.indexOf(variant) > -1) {\n      toast[`${variant}`](props.notification.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setTimeout(() => {\n        dispatch(showNotificationWithMessage(null));\n      }, 2000);\n    }\n  };\n  useEffect(() => {\n    notify();\n  }, []);\n  return (\n    <div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport InputTag from \"../../UI/InputTag/InputTag\";\nimport { IconButton } from \"@mui/material\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport ExpectedResponseItem from \"./ExpectedResponseItem/ExpectedResponseItem\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./ExpectedResponses.scss\";\nimport ToastNotification from '../../UI/ToastNotification';\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../store/actions\";\nconst ExpectedResponses = (props) => {\n  const dispatch = useDispatch()\n  const [expectedResponseList, setExpectedResponseList] = useState(Array.isArray(props.value) ? props.value: [] );\n  const [newExpectedResponse, setNewExpectedResponse] = useState({\n    answer_type: \"\",\n    match_type: \"\",\n    value: \"\",\n  });\n  useEffect(() => {\n    if(Array.isArray(props.value)){\n      setExpectedResponseList(props.value);\n    }\n    return () => {\n      setExpectedResponseList([]);\n    };\n  }, [props.value]);\n\n  const updateNewExpectedResponse = (value, indentifier) => {\n    setNewExpectedResponse((prev) => {\n      return {\n        ...prev,\n        [indentifier]: value,\n      };\n    });\n  };\n\n  const saveNewExpectedResponseToList = () => {\n    let tempNewExpectedResponse = { ...newExpectedResponse };\n    let tempExpectedResponseList = [...expectedResponseList];\n    tempExpectedResponseList.push(tempNewExpectedResponse);\n    setNewExpectedResponse((prev) => {\n      return {\n        ...prev,\n        answer_type: \"\",\n        match_type: \"\",\n        value: \"\",\n      };\n    });\n    setExpectedResponseList((prev) => [...tempExpectedResponseList]);\n    props.setValue(tempExpectedResponseList,props.name)\n    dispatch(showNotificationWithMessage({\n      variant:\"success\",\n      message:\"Expected Response Added\",\n      \n    }))\n  };\n  \n  const deleteResponse = (index)=>{\n    let tempExpectedResponseList = [...expectedResponseList];\n    tempExpectedResponseList.splice(index,1);\n    setExpectedResponseList((prev)=>{\n      return tempExpectedResponseList;\n    })\n    props.setValue(tempExpectedResponseList,props.name)\n    \n  }\n\n  let renderedList = null;\n  renderedList =\n    Array.isArray(expectedResponseList) &&\n    expectedResponseList.length > 0 &&\n    expectedResponseList.map((item, index) => {\n      return <ExpectedResponseItem key={uuidv4()} item={item} index={index} deleteResponse={deleteResponse} />;\n    });\n\n  return (\n    <div className=\"expectedResponses__container\">\n      <div className=\"expectedResponses__header default-font\">\n        Expected Response\n      </div>\n\n      <div className=\"expectedResponses__texts\">\n        <InputTag\n          width=\"90%\"\n          displayName=\"answer type\"\n          name=\"answer_type\"\n          value={newExpectedResponse[\"answer_type\"]}\n          setValue={updateNewExpectedResponse}\n        ></InputTag>\n        <InputTag\n          width=\"90%\"\n          displayName=\"match type \"\n          name=\"match_type\"\n          value={newExpectedResponse[\"match_type\"]}\n          setValue={updateNewExpectedResponse}\n        ></InputTag>\n        <InputTag\n          width=\"90%\"\n          displayName=\"value\"\n          name=\"value\"\n          value={newExpectedResponse[\"value\"]}\n          setValue={updateNewExpectedResponse}\n        ></InputTag>\n        <div className=\"expectedResponses__icon\">\n          <IconButton onClick={saveNewExpectedResponseToList}>\n            <AddBoxIcon />\n          </IconButton>\n        </div>\n       \n      </div>\n      <div className=\"expectedResponses__addedItems\">{renderedList}</div>\n    </div>\n  );\n};\n\nexport default ExpectedResponses;\n","import React, { useState, useEffect } from \"react\";\nimport \"./ActionItem.scss\";\nimport { Icon, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport TextBoxTag from \"../../../UI/TextBoxTag/TextBoxTag\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../../store/actions\";\nimport TransitionsModal from \"../../../UI/Modal/ModalTag\";\nconst ActionItem = (props) => {\n  const [buttonInEditMode, setButtonInEditMode] = useState(false);\n  const [botUtterance, setBotUtterance] = useState(props.value);\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const deleteData = (status) => {\n    if (status == true) {\n      props.deleteAction(props.index);\n      setShowModal(false);\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"Action item deletion Successful!\",\n        })\n      );\n    } else if (status == false) {\n      setShowModal(false);\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"info\",\n          message: \"Action item deletion declined!\",\n        })\n      );\n    }\n  };\n  const updateAction = () => {\n    props.updateAction(botUtterance, props.index);\n  };\n  return (\n    <div className=\"botUtteranceItem__container\">\n      <TextBoxTag\n        value={botUtterance}\n        setValue={setBotUtterance}\n        width=\"98%\"\n        disabled={!buttonInEditMode}\n      />\n      {!buttonInEditMode ? (\n        <IconButton onClick={() => setButtonInEditMode(true)}>\n          <EditIcon />\n        </IconButton>\n      ) : (\n        <IconButton onClick={updateAction}>\n          <SaveIcon />\n        </IconButton>\n      )}\n\n      <IconButton onClick={() => setShowModal(true)}>\n        <DeleteIcon />\n      </IconButton>\n      <TransitionsModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        deleteData={deleteData}\n      />\n    </div>\n  );\n};\n\nexport default ActionItem;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Actions.scss\";\nimport InputTag from \"../../UI/InputTag/InputTag\";\nimport { IconButton } from \"@mui/material\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport ActionItem from \"./ActionItem/ActionItem\";\nimport TextBoxTag from \"../../UI/TextBoxTag/TextBoxTag\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst Actions = (props) => {\n  const dispatch = useDispatch();\n  const [actionList, setActionList] = useState([]);\n  const [newAction, setNewAction] = useState(\"\");\n  useEffect(() => {\n    if (Array.isArray(props.value)) {\n      setActionList(props.value);\n    }\n    return () => {\n      setActionList([]);\n    };\n  }, [props.value]);\n  const AddActionToList = () => {\n    const tempActionList = [...actionList];\n    \n    try {\n\n      if (JSON.parse(newAction) !== \"string\") {\n        tempActionList.push(JSON.parse(newAction));\n        setNewAction(\"\");\n        setActionList((prev) => [...prev, newAction]);\n        props.setValue(tempActionList, props.name);\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"success\",\n            message: \"Action added to the list\",\n          })\n        );\n      }\n    } catch (err) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"error\",\n          message: \"Can't add string to ActionList\",\n        })\n      );\n    }\n  };\n  const updateAction = (value, index) => {\n    let tempActionList = [...actionList];\n    try {\n\n      if (JSON.parse(value) !== \"string\") {\n        tempActionList[index] = JSON.parse(value);\n        setActionList((prev) => [...tempActionList]);\n        props.setValue(tempActionList, props.name);\n        dispatch(\n          showNotificationWithMessage({\n            variant: \"info\",\n            message: \"Action edited\",\n          })\n        );\n      }\n    } catch (err) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"error\",\n          message: \"Please update with valid JSON\",\n        })\n      );\n    }\n  };\n  const deleteAction = (index) => {\n    let tempActionList = [...actionList];\n    tempActionList.splice(index, 1);\n    setActionList((prev) => [...tempActionList]);\n    props.setValue(tempActionList, props.name);\n  };\n  let renderedList = null;\n  renderedList =\n    Array.isArray(actionList) &&\n    actionList.length > 0 &&\n    actionList.map((item, index) => {\n      return (\n        <ActionItem\n          key={uuidv4()}\n          value={JSON.stringify(item)}\n          index={index}\n          deleteAction={deleteAction}\n          updateAction={updateAction}\n        />\n      );\n    });\n  return (\n    <div className=\"actions__container\">\n      <div className=\"actions__adder\">\n        <TextBoxTag\n          name={props.name}\n          value={newAction}\n          setValue={setNewAction}\n          width=\"95%\"\n          displayName={props.displayName}\n        />\n        <div className=\"actions__icon\">\n          <IconButton onClick={AddActionToList}>\n            <AddBoxIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"actions__addedItems\">{renderedList}</div>\n    </div>\n  );\n};\n\nexport default Actions;\n","import React, { useState, useEffect } from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport \"./CheckBox.scss\";\nexport default function ControlledCheckbox(props) {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n    let valueToBeChecked = event.target.checked == true ? false : \"\";\n    props.setValue(valueToBeChecked, props.name);\n  };\n  useEffect(() => {\n    if (props.value === \"\") {\n      setChecked(false);\n    } else if(props.value===false) {\n      setChecked(true);\n    }\n  }, [props.value]);\n\n  return (\n    <div>\n      <div className=\"default-font\">{props.displayName}</div>\n      <div className=\"checkbox__container\">\n        <div className=\"checkbox__text\">False</div>\n        <Checkbox\n          checked={checked}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          name=\"controlled-radio-buttons-group\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./BotUtteranceItem.scss\";\nimport { Icon, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport InputTag from \"../../../UI/InputTag/InputTag\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../../store/actions\";\nimport TransitionsModal from \"../../../UI/Modal/ModalTag\";\nconst BotUtteranceItem = (props) => {\n  const [buttonInEditMode, setButtonInEditMode] = useState(false);\n  const [botUtterance, setBotUtterance] = useState(props.value);\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const deleteData = (status) => {\n    if (status == true) {\n      props.deleteUtterance(props.index);\n      setShowModal(false);\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"Action item deletion Successful!\",\n        })\n      );\n    } else if (status == false) {\n      setShowModal(false);\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"info\",\n          message: \"Action item deletion declined!\",\n        })\n      );\n    }\n  };\n  const updateBotUtterance = () => {\n    props.updateBotUtterance(botUtterance, props.index);\n  };\n  return (\n    <div className=\"botUtteranceItem__container\">\n      <InputTag\n        value={botUtterance}\n        setValue={setBotUtterance}\n        width=\"98%\"\n        disabled={!buttonInEditMode}\n      />\n      {!buttonInEditMode ? (\n        <IconButton onClick={() => setButtonInEditMode(true)}>\n          <EditIcon />\n        </IconButton>\n      ) : (\n        <IconButton onClick={updateBotUtterance}>\n          <SaveIcon />\n        </IconButton>\n      )}\n\n      <IconButton onClick={() => setShowModal(true)}>\n        <DeleteIcon />\n      </IconButton>\n      <TransitionsModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        deleteData={deleteData}\n      />\n    </div>\n  );\n};\n\nexport default BotUtteranceItem;\n","import React, { useState, useEffect } from \"react\";\nimport \"./BotUtterances.scss\";\nimport InputTag from \"../../UI/InputTag/InputTag\";\nimport { IconButton } from \"@mui/material\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage } from \"../../../store/actions\";\nimport BotUtteranceItem from \"./BotUtteranceItem/BotUtteranceItem\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst BotUtterances = (props) => {\n  const dispatch = useDispatch();\n  const [botUtteranceList, setBotUtteranceList] = useState([]);\n  const [newBotUtterance, setNewBotUtterance] = useState(\"\");\n  useEffect(() => {\n    if (Array.isArray(props.value)) {\n      setBotUtteranceList(props.value);\n    }\n    return () => {\n      setBotUtteranceList([]);\n    };\n  }, [props.value]);\n  const AddBotUtteranceToList = () => {\n    const tempBotUtteranceList = [...botUtteranceList];\n    tempBotUtteranceList.push(newBotUtterance);\n    setNewBotUtterance(\"\");\n    setBotUtteranceList((prev) => [...prev, newBotUtterance]);\n    props.setValue(tempBotUtteranceList,props.name);\n    dispatch(showNotificationWithMessage({\n      variant:\"success\",\n      message:\"Bot utterance added.\"\n    }))\n\n  };\n  const updateBotUtterance = (value, index) => {\n    let tempBotUtteranceList = [...botUtteranceList];\n    tempBotUtteranceList[index] = value;\n    setBotUtteranceList((prev) => [...tempBotUtteranceList]);\n    props.setValue(tempBotUtteranceList,props.name)\n    dispatch(showNotificationWithMessage({\n      variant:\"info\",\n      message:\"Bot utterance edited.\"\n    }))\n  };\n  const deleteBotUtterance = (index) => {\n    let tempBotUtteranceList = [...botUtteranceList];\n    tempBotUtteranceList.splice(index, 1);\n    setBotUtteranceList((prev) => [...tempBotUtteranceList]);\n    props.setValue(tempBotUtteranceList,props.name);\n    dispatch(showNotificationWithMessage({\n      variant:\"warning\",\n      message:\"Bot utterance deleted.\"\n    }))\n  };\n  let renderedList = null;\n  renderedList =\n    Array.isArray(botUtteranceList) &&\n    botUtteranceList.length > 0 &&\n    botUtteranceList.map((item, index) => {\n      return (\n        <BotUtteranceItem\n          key={uuidv4()}\n          value={item}\n          index={index}\n          deleteUtterance={deleteBotUtterance}\n          updateBotUtterance={updateBotUtterance}\n        />\n      );\n    });\n  return (\n    <div className=\"botUtterance__container\">\n      <div className=\"botUtterance__adder\">\n        <InputTag\n          value={newBotUtterance}\n          setValue={setNewBotUtterance}\n          width=\"95%\"\n          displayName={props.displayName}\n        />\n        <div className=\"botUtterance__addIcon\">\n\n        <IconButton onClick={AddBotUtteranceToList}>\n          <AddBoxIcon />\n        </IconButton>\n        </div>\n      </div>\n\n    \n      <div className=\"botUtterance__items\">{renderedList}</div>\n    </div>\n  );\n};\n\nexport default BotUtterances;\n","import React, { useState, useEffect } from \"react\";\nimport \"./LayoutBody.scss\";\nimport InputTag from \"../UI/InputTag/InputTag\";\nimport SearchableComponent from \"../UI/SearchDropdown/SearchableComponent\";\nimport RadioButtonTag from \"../UI/RadioButtonTag/RadioButtonTag\";\nimport ExpectedResponses from \"./ExpectedResponses/ExpectedResponses\";\nimport Actions from \"./Actions/Actions\";\nimport { Button } from \"@mui/material\";\nimport VisibilitySharpIcon from \"@mui/icons-material/VisibilitySharp\";\nimport SaveSharpIcon from \"@mui/icons-material/SaveSharp\";\nimport PreviewPopup from \"../UI/PreviewComponent/PreviewPopup\";\nimport CheckBox from \"../UI/CheckBox/CheckBox\";\nimport masterJson from \"../../Data/master.json\";\nimport BotUtterances from \"./BotUtterance/BotUtterances\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showNotificationWithMessage,\n  hasFileUpdated,\n} from \"../../store/actions\";\nconst LayoutBody = (props) => {\n  const selectedFileDetails = useSelector((state) => state.reducer.fileDetails);\n  const fileUpdated = useSelector((state) => state.reducer.fileUpdated);\n  const dispatch = useDispatch();\n  const [jsonForm, setJsonForm] = useState({});\n  const [visibility, setVisibility] = useState(false);\n  const [modifiedJson, setModifiedJson] = useState({});\n  const createForm = (jsonObject) => {\n    let tempMasterJson = { ...masterJson };\n    Object.keys(tempMasterJson).map((key, index) => {\n      if (jsonObject && key in jsonObject) {\n        tempMasterJson[key] = jsonObject[key];\n      }\n    });\n    setJsonForm((prev) => {\n      return { ...tempMasterJson };\n    });\n  };\n  useEffect(() => {\n    setJsonForm({});\n\n    createForm(props.jsonObject);\n  }, [props.currentSelectedJsonIndex, props.jsonObject]);\n  const updatejsonObjectFields = (value, identifier) => {\n    if (props.currentSelectedJsonIndex < 0) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"warning\",\n          message: \"Please Select JSON\",\n        })\n      );\n      return;\n    }\n    if (props.currentSelectedJsonIndex > -1) {\n      if (!fileUpdated) {\n        dispatch(hasFileUpdated(true));\n      }\n    }\n    if (identifier == \"type\") {\n      value = value?.[\"type\"];\n    } else if (identifier == \"clinical_entity\") {\n      // [\n      //   {\n      //     \"t_ref_clinical_entity_id\": 1,\n      //     \"entity_name\": \"Cough\",\n      //     \"measure_type\": \"BINARY\"\n      //   }\n      // ]\n      let entityName = value?.[\"entity_name\"];\n      setJsonForm((prev) => {\n        return {\n          ...prev,\n          [identifier]: entityName,\n          [\"clinical_entity_id\"]: value?.[\"t_ref_clinical_entity_id\"],\n        };\n      });\n      value = undefined;\n    } else if (identifier == \"symptom\") {\n      // {\n      //   \"t_ref_sns_entity_id\": 1,\n      //   \"sns_entity_name\": \"Cough\",\n      //   \"sns_entity_measure_type\": \"BINARY\"\n      // }\n      let entityName = value && value?.[\"sns_entity_name\"];\n      setJsonForm((prev) => {\n        return {\n          ...prev,\n          [identifier]: entityName,\n        };\n      });\n      value = undefined;\n    } else if (identifier == \"measure_type\") {\n      //     {id:1,\n      //     measure_type:\"NUMBER_SCALE\"\n      // },\n      let entityName = value && value?.[\"measure_type\"];\n      setJsonForm((prev) => {\n        return {\n          ...prev,\n          [identifier]: entityName,\n        };\n      });\n      value = undefined;\n    } else if (identifier == \"vital\") {\n      // {\n      //   \"vitals_id\": 2,\n      //   \"common_name\": \"temperature\",\n      //   \"unit_of_measurement\": \"degree farhenheit\",\n      //   \"measure_type\": \"measure\",\n      //   \"value_field\": \"\"\n      // }\n      let entityName = value && value?.[\"common_name\"];\n      setJsonForm((prev) => {\n        return {\n          ...prev,\n          [identifier]: entityName,\n          [\"vital_value\"]: value?.[\"measure_type\"],\n          [\"value\"]: value?.[\"value_field\"],\n        };\n      });\n      value = undefined;\n    }\n\n    if (value !== undefined || value != null) {\n      setJsonForm((prev) => {\n        return {\n          ...prev,\n          [identifier]: value,\n        };\n      });\n    }\n  };\n  const createModifiedJson = () => {\n    let tempJsonForm = { ...jsonForm };\n    let finalJsonForm = {};\n    Object.keys(tempJsonForm).map((item, index) => {\n      if (typeof tempJsonForm[item] == \"boolean\") {\n        finalJsonForm[item] = tempJsonForm[item];\n      } else if (Array.isArray(tempJsonForm[item])) {\n        finalJsonForm[item] = tempJsonForm[item];\n      } else {\n        if (tempJsonForm?.[item].length !== 0) {\n          finalJsonForm[item] = tempJsonForm[item];\n        }\n      }\n    });\n\n    return finalJsonForm;\n  };\n  const previewData = () => {\n    let finalJsonForm = createModifiedJson();\n    setModifiedJson((prev) => {\n      return { ...prev, finalJsonForm };\n    });\n    setVisibility(true);\n  };\n  const saveJsonDataToTemplate = () => {\n    try {\n      let finalJsonForm = createModifiedJson();\n      props.updateJsonTemplateData(\n        finalJsonForm,\n        props.currentSelectedJsonIndex\n      );\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"Data Saved!\",\n        })\n      );\n      dispatch(hasFileUpdated(false));\n    } catch (err) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"error\",\n          message: \"Sorry Error occured in Saving Data!\",\n        })\n      );\n    }\n  };\n  return (\n    <div className=\"layoutBody__container\">\n      <div className=\"layoutBody__header\">\n        {selectedFileDetails && selectedFileDetails?.name\n          ? selectedFileDetails?.name\n          : \"TemplateJSON\"}\n      </div>\n      <div className=\"layoutBody__columns\">\n        <div className=\"layoutBody__column1\">\n          <div className=\"layoutBody__column1Row1\">\n            <div className=\"layoutBody__columnItem1\">\n              <InputTag\n                displayName=\"question id\"\n                name=\"question_id\"\n                setValue={updatejsonObjectFields}\n                value={jsonForm[\"question_id\"]}\n                helperText=\"\"\n              />\n            </div>\n            <SearchableComponent\n              displayName=\"type\"\n              name=\"type\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"type\"]}\n              data={props.typeOptionsData ? props.typeOptionsData : []}\n              displayValue=\"type\"\n              placeholder=\"Enter type\"\n            />\n          </div>\n          <div className=\"layoutBody__column1Row2\">\n            <SearchableComponent\n              displayName=\"vital\"\n              displayValue=\"common_name\"\n              name=\"vital\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"vital\"]}\n              data={props.vitalsData}\n              placeholder=\"Please Select vitals\"\n            />\n            <InputTag\n              displayName=\"vital_value\"\n              name=\"vital_value\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"vital_value\"]}\n              disabled\n            />\n            <InputTag\n              displayName=\"value\"\n              name=\"value\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"value\"]}\n              disabled\n            />\n          </div>\n          <div className=\"layoutBody__column1Row3\">\n            <BotUtterances\n              displayName=\"bot_utterance\"\n              width=\"100%\"\n              name=\"bot_utterances\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"bot_utterances\"]}\n            />\n          </div>\n\n          <div className=\"layoutBody__column1Row4\">\n            <InputTag\n              displayName=\"fallback_response\"\n              width=\"100%\"\n              name=\"fallback_response\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"fallback_response\"]}\n            />\n          </div>\n          <div className=\"layoutBody__column1Row5\">\n            <InputTag\n              displayName=\"fallback\"\n              width=\"100%\"\n              name=\"fallback\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"fallback\"]}\n            />\n          </div>\n          <div className=\"layoutBody__column1Row6\">\n            <InputTag\n              displayName=\"delay\"\n              name=\"delay\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"delay\"]}\n            />\n            <InputTag\n              displayName=\"repeat\"\n              name=\"repeat\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"repeat\"]}\n            />\n            <InputTag\n              displayName=\"repeat times\"\n              name=\"repeat_times\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"repeat_times\"]}\n            />\n          </div>\n          <div className=\"layoutBody__column1Row7\">\n            <InputTag\n              displayName=\"query media\"\n              width=\"100%\"\n              name=\"query_media\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"query_media\"]}\n            />\n          </div>\n          <div className=\"layoutBody__column1Row8\">\n            <div className=\"layoutBody__columnItem1\">\n              <SearchableComponent\n                displayName=\"Symptom\"\n                displayValue=\"sns_entity_name\"\n                name=\"symptom\"\n                setValue={updatejsonObjectFields}\n                value={jsonForm[\"symptom\"]}\n                placeholder=\"Select Symptoms\"\n                data={props.symptomData}\n              />\n            </div>\n            <RadioButtonTag\n              displayName=\"is clinical entity\"\n              name=\"is_clinical_entity\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"is_clinical_entity\"]}\n            />\n          </div>\n          <div className=\"layoutBody__column1Row9\">\n            <div className=\"layoutBody__columnItem1\">\n              <SearchableComponent\n                displayName=\"Clinical Entity\"\n                displayValue=\"entity_name\"\n                name=\"clinical_entity\"\n                setValue={updatejsonObjectFields}\n                value={jsonForm[\"clinical_entity\"]}\n                data={props.clinicalEntitiesData}\n                placeholder=\"Select clinical entity\"\n              />\n            </div>\n            <InputTag\n              displayName=\"clinical_entity_id\"\n              name=\"clinical_entity_id\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"clinical_entity_id\"]}\n              disabled\n              placeholder=\"clinical entity id\"\n            />\n          </div>\n          <div className=\"layoutBody__column1Row9\"></div>\n        </div>\n        <div className=\"layoutBody__column2\">\n          <ExpectedResponses\n            name=\"expectedresponse\"\n            setValue={updatejsonObjectFields}\n            value={jsonForm[\"expectedresponse\"]}\n          />\n          <Actions\n            height=\"300px\"\n            name=\"action\"\n            setValue={updatejsonObjectFields}\n            value={jsonForm[\"action\"]}\n          />\n          <div className=\"layoutBody__column2Row3\">\n            <div className=\"layoutBody__column2Row3Item1\">\n              <SearchableComponent\n                displayName=\"Measure type\"\n                displayValue=\"measure_type\"\n                name=\"measure_type\"\n                setValue={updatejsonObjectFields}\n                value={jsonForm[\"measure_type\"]}\n                data={props.measureTypeOptionsData}\n                placeholder=\"Enter Measure Type\"\n              />\n            </div>\n            <RadioButtonTag\n              displayName=\"check intent\"\n              name=\"check_intent\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"check_intent\"]}\n            />\n          </div>\n          <div className=\"layoutBody__column2Row4\"></div>\n          <div className=\"layoutBody__column2Row5\">\n            <div className=\"layoutBody__columnItem1\">\n              <RadioButtonTag\n                displayName=\"skip Response\"\n                name=\"skip_response\"\n                setValue={updatejsonObjectFields}\n                value={jsonForm[\"skip_response\"]}\n              />\n            </div>\n            <div className=\"layoutBody__symptomLogger\">\n              <CheckBox\n                displayName=\"Symptom Logger\"\n                height=\"20px\"\n                name=\"symptom_logger\"\n                setValue={updatejsonObjectFields}\n                value={jsonForm[\"symptom_logger\"]}\n              />\n            </div>\n          </div>\n          <div className=\"layoutBody__column2Row5\">\n            <InputTag\n              displayName=\"query Response\"\n              name=\"query_response\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"query_response\"]}\n            />\n            <InputTag\n              displayName=\"query Media\"\n              name=\"query_media\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"query_media\"]}\n            />\n            <InputTag\n              displayName=\"query fallback\"\n              name=\"query_fallback\"\n              setValue={updatejsonObjectFields}\n              value={jsonForm[\"query_fallback\"]}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"layoutBody__buttons\">\n        <div className=\"layoutBody__button\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<VisibilitySharpIcon />}\n            onClick={previewData}\n          >\n            Preview\n          </Button>\n        </div>\n        <div className=\"layoutBody__button\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            startIcon={<SaveSharpIcon />}\n            onClick={saveJsonDataToTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <PreviewPopup\n        visibility={visibility}\n        setVisibility={setVisibility}\n        jsonData={modifiedJson}\n      />\n    </div>\n  );\n};\n\nexport default LayoutBody;\n","import React, { useState, useEffect } from \"react\";\nimport LayoutNavbar from \"../LayoutNavbar/LayoutNavbar\";\nimport LayoutSidebar from \"../LayoutSidebar/LayoutSidebar\";\nimport LayoutBody from \"../LayoutBody/LayoutBody\";\nimport { useSelector } from \"react-redux\";\nimport \"./Layout.scss\";\nimport { showNotificationWithMessage } from \"../../store/actions\";\nconst Layout = (props) => {\n  const vitalsJsonTemplate = useSelector(state=>state.reducer.vitalsData);\n  const [templateData, setTemplateData] = useState(null);\n  // json for sending to layout body\n  const [currentSelectedJsonIndex, setCurrentSelectedJsonIndex] = useState(-1);\n  const [currentJson, setCurrentJson] = useState({});\n    \n  const selectCurrentJsonFunc = (jsonIndexInTemplate) => {\n    if (jsonIndexInTemplate > -1) {\n      setCurrentSelectedJsonIndex(jsonIndexInTemplate);\n      setCurrentJson(templateData[jsonIndexInTemplate]);\n    } else {\n      dispatch(showNotificationWithMessage({\n        variant:\"warning\",\n        message:\"Please select Form object.\"\n      }))\n    }\n  };\n  \n  const updateJsonTemplateData = (jsonObject, index) => {\n    let tempTemplateData = [...templateData];\n    tempTemplateData[index] = jsonObject;\n    setTemplateData((prev) => [...tempTemplateData]);\n  };\n\n  const addNewJsonObject = () => {\n    let tempTemplateData = [...templateData];\n    tempTemplateData.push({})\n    setTemplateData((prev) => [...tempTemplateData]);\n  };\n\n  const deleteJsonObject = (index)=>{\n    let tempTemplateData = [...templateData];\n    tempTemplateData.splice(index,1);\n    setTemplateData((prev) => [...tempTemplateData]);\n    if(currentSelectedJsonIndex==index){\n      setCurrentJson({});\n      setCurrentSelectedJsonIndex(-1)\n    }\n  }\n\n\n\n  useEffect(() => {\n    setCurrentSelectedJsonIndex(-1);\n       setTemplateData(vitalsJsonTemplate);\n       setCurrentJson(prev=>{})\n    return () => {\n      setTemplateData([]);\n    };\n  }, [vitalsJsonTemplate]);\n  \n  return (\n    <div className=\"layout__content\">\n      <div className=\"layout__Navbar\">\n        <LayoutNavbar />\n      </div>\n      <div className=\"layout__sidebar\">\n        \n          <LayoutSidebar\n            templateData={templateData}\n            selectCurrentJsonFunc={selectCurrentJsonFunc}\n            currentSelectedJsonIndex={currentSelectedJsonIndex}\n            addNewJsonObject={addNewJsonObject}\n            deleteJsonObject={deleteJsonObject}\n          />\n      </div>\n      <div className=\"layout__body\">\n        <LayoutBody\n          jsonObject={currentJson}\n          currentSelectedJsonIndex={currentSelectedJsonIndex}\n          updateJsonTemplateData={updateJsonTemplateData}\n          {...props}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from \"react\";\n\nexport function handleResponse(response) {\n  return response.json().then((json) => {\n    if (!response.ok) {\n      const error = Object.assign({}, json, {\n        status: response.status,\n        statusText: response.statusText,\n      });\n      return Promise.reject(error);\n    }\n    return json;\n  });\n}\n\nexport const getFetchFunction = async (urlEndpoint) => {\n  if (!navigator.onLine) {\n    alert(\"Please connect to Network.\")\n    return null;\n  }\n  try {\n    let valueFetched = fetch(\n      `${window[\"getConfig\"].BACKEND_SERVICE_URL}/${urlEndpoint}`,\n      {\n        method: \"GET\"\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        return result;\n      });\n    return valueFetched;\n  } catch (err) {\n    alert(err);\n    ;\n    return null;\n  }\n};\n\nexport const useFetch = (urlEndpoint, fetchAgain = false) => {\n  const [response, setResponse] = React.useState([]);\n  const [error, setError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  \n  \n  React.useEffect(() => {\n    const fetchData = async () => {\n      var myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"Accept\", \"application/json\");\n      let requestOptions = {\n        method: \"GET\",\n      \n      };\n      setIsLoading(true);\n      try {\n        const res = await fetch(\n          `${window[\"getConfig\"].BACKEND_SERVICE_URL}/${urlEndpoint}`,\n          requestOptions\n        )\n          .then((response) => {\n            if(response.status == 401){\n              alert(\"un-Authorised!!!.Please Login Again\")\n                localStorage.removeItem(\"state\");\n            }\n            return response.json()\n          })\n          .then((result) => {\n            setIsLoading(false);\n            setResponse(result);\n            return result;\n          });\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [fetchAgain]);\n\n  return { response, error, isLoading };\n};\n","export const typeOptions =[{\n    id:1,\n    type:\"DEFAULT\",\n\n},{\n    id:2,\n    type:\"ELICIT_FROM_PATIENT\"\n}]\n\nexport const measureTypeOptions =[{\n    id:1,\n    measure_type:\"NUMBER_SCALE\"\n},\n{\n    id:2,\n    measure_type:\"THREE_POINT_SCALE\"\n},{\n    id:3,\n    measure_type:\"BINARY\"\n}]","import React, { useState, useEffect } from \"react\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport \"./dx.common.css\";\nimport \"./dx.light.css\";\n\nimport \"./App.scss\";\nimport Layout from \"./Components/Layout/Layout\";\nimport { useSelector } from \"react-redux\";\nimport ToastNotification from \"./Components/UI/ToastNotification\";\nimport { useFetch } from \"./HighOrderFunctions/FetchFunction/getFetchFunction\";\nimport * as apiEndPoint from \"./HighOrderFunctions/API/allGetAPI\";\nimport backgroundIcon from './Icons/transparentVEngageLogo.png';\nimport {\n  typeOptions,\n  measureTypeOptions,\n} from \"./HighOrderFunctions/API/APIData\";\nimport NavigatorOnline from \"react-navigator-online\";\nimport { useDispatch } from \"react-redux\";\nimport { showNotificationWithMessage,resetDetails } from \"./store/actions\";\nfunction App() {\n  const [showLayout,setShowLayout] = useState(false);\n  const dispatch = useDispatch();\n  const notificationState = useSelector((state) => state.reducer.notification);\n  const { response: clinicalEntitiesData } = useFetch(\n    apiEndPoint.getClinicalEntititesEndPoint,\n    false\n  );\n  const { response: vitalsData } = useFetch(\n    apiEndPoint.getAllVitalsEndPoint,\n    false\n  );\n  const { response: symptomData } = useFetch(\n    apiEndPoint.getSymptomsEndPoint,\n    false\n  );\n  const showOnlineMessage = (status) => {\n    if (status) {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"success\",\n          message: \"You are online.! 👍\",\n        })\n      );\n    } else {\n      dispatch(\n        showNotificationWithMessage({\n          variant: \"warning\",\n          message: \"You are offline.! 😥\",\n        })\n      );\n    }\n  };\n  useEffect(() => {\n    showOnlineMessage(navigator.onLine);\n    dispatch(resetDetails())\n    setShowLayout(true);\n  }, []);\n  return (\n    <div className=\"app__container\">\n      <img className=\"app__backgroundImage\" src={backgroundIcon} />\n      {notificationState !== null && (\n        <ToastNotification notification={notificationState} />\n      )}\n      <NavigatorOnline onChange={(status) => showOnlineMessage(status)} />\n     {showLayout &&  <Layout\n        clinicalEntitiesData={clinicalEntitiesData}\n        vitalsData={vitalsData}\n        symptomData={symptomData}\n        typeOptionsData={typeOptions}\n        measureTypeOptionsData={measureTypeOptions}\n      />\n     }\n    </div>\n  );\n}\nexport default App;\n","// symptom\nexport const getClinicalEntititesEndPoint = \"api/v1/get-all-clinical-entities\";\nexport const getSymptomsEndPoint = \"api/v1/get-symptoms\";\nexport const getAllVitalsEndPoint = \"api/v1/get-all-vitals\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  NOTIFICATION_WITH_MESSAGE,\n  VITALS_DATA,\n  FILE_DETAILS,\n  RESET_DETAILS,\n  HAS_FILE_UPDATED,\n  SOME_FORMS_EMPTY\n} from \"./actionTypes\";\n\nconst initialState = {\n  notification: null,\n  vitalsData: \"\",\n  fileDetails: {},\n  fileUpdated: false,\n  someFormsEmpty:false,\n};\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NOTIFICATION_WITH_MESSAGE:\n      return {\n        ...state,\n        notification: action.notification,\n      };\n   // contains all contents of added file\n    case VITALS_DATA:\n      return {\n        ...state,\n        vitalsData: action.vitalsData,\n      };\n    // contains name of file added\n    case FILE_DETAILS:\n      return {\n        ...state,\n        fileDetails: action.fileDetails,\n      };\n    // to check whether individual json has been saved or not after editing\n    case HAS_FILE_UPDATED:\n      return {\n        ...state,\n        fileUpdated: action.status,\n      };\n      // check whether some newly added json form is saved or not\n      case SOME_FORMS_EMPTY:\n      return{\n        ...state,\n        someFormsEmpty:action.status\n      }\n    // reset all details in this redux\n    case RESET_DETAILS:\n      return {\n        ...initialState,\n      };\n    \n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","\nimport Reducer from './Reducer';\nimport { createStore, applyMiddleware, compose ,combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\nconst rootReducer = combineReducers({\n    reducer:Reducer\n});\n    \nfunction saveToLocalStorage(state){\n    try{\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state',serializedState)\n    } catch(e){\n    }\n}\nfunction loadFromLocalStorage(){\n    try{\n        const serializedState  = localStorage.getItem('state')\n        if(serializedState === null) return undefined\n        return JSON.parse(serializedState);\n    }catch(e){\n        return undefined\n    }\n    \n}\nconst persistedState = loadFromLocalStorage();\nexport const store = createStore(rootReducer, \n    persistedState,\n    composeEnhancers(\n    applyMiddleware(thunk)\n    ));\n\n    \nstore.subscribe(()=>saveToLocalStorage(store.getState()))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './store/Store';\nimport {Provider} from 'react-redux';\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}